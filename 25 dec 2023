1) hashing 

#include <iostream>
using namespace std;

int main() {
    int n;
    cin >> n;

    int arr[n];
    for (int i=0;i<n;i++){
        cin>>arr[i];
    }

    int hash[13] = {0};

    for (int i = 0; i < n; i++) {  // Use < instead of <=
        // cin >> arr[i];
        hash[arr[i]] += 1;         // Use arr[i] as an index to update hash
    }

    int q;
    cin >> q;

    while (q--) {
        int number;
        cin >> number;
        cout << hash[number] << endl;
    }

    return 0;
}

*****************************************************************************************************************************

2) hashing for string 

#include <iostream>
using namespace std;

int main(){
    string s;
    cin>>s;

    //precompute
    int hash[26]={0};
    for(int i=0;i<s.size();i++){
        hash[s[i]-'a']+=1;
        
    }



    int q;
    cin>>q;
    while(q--){
        char c;
        cin>>c;
        //fetch
        cout<<has[c-'a']<<endl;

    }

    return 0;



}


*****************************************************************************************************************************


3) hashing   with map

#include <iostream>
#include <vector>
#include <algorithm>
#include <map>

// Include other headers as needed

using namespace std;

int main(){
    int n;
    cin>>n;
    int arr[n];
    map<int,int> mpp;
    for( int i=0; i<n;i++){
        cin>>arr[i];
        mpp[arr[i]]++;
    }
for (auto it:mpp){
    // first for key and second for value 
    cout<<it.first<<"->"<<it.second<<endl; 

}

    int q;
    cin>>q;
    while(q--){
        int number;
        cin>>number;
        //fetch number 
        cout<<mpp[number]<<endl;
    }
    return 0;
}



*****************************************************************************************************************************


4)   https://www.codingninjas.com/studio/problems/print-1-to-n_628290?utm_source=striver&utm_medium=website&utm_campaign=a_zcoursetuf&leftPanelTabValue=SUBMISSION

1 to N Without Loop

vector<int> printNos(int n) {
    // Write Your Code Here
 // Base case: If n is 1, return a vector containing only 1
    if (n == 1) {
        return {1};
    }

    // // Recursive case: Call printNos with n-1 and append n to the result
    // vector<int> result = printNos(n - 1);
    // result.push_back(n);

    // return result;

    vector<int> result=printNos(n-1);
    result.push_back(n);
    return result;
}


*****************************************************************************************************************************


5) https://www.codingninjas.com/studio/problems/-print-n-times_8380707?utm_source=striver&utm_medium=website&utm_campaign=a_zcoursetuf&leftPanelTabValue=PROBLEM

Print n times

void printNTimes(int n) {
	// Write your code here.
	if(n==0) return ;
	cout<<"Coding Ninjas"<<" ";
	printNTimes(n-1);
s
}


*****************************************************************************************************************************

6) https://www.codingninjas.com/studio/problems/n-to-1-without-loop_8357243?utm_source=striver&utm_medium=website&utm_campaign=a_zcoursetuf&leftPanelTabValue=PROBLEM

N to 1 without loop

vector<int> printNos(int x) {
   
    if(x<1){
        return {};
    }
    // calcultaion
    cout<<x<<" ";
    vector<int>v=printNos(x-1);
    return v;
}


*****************************************************************************************************************************

7) https://www.codingninjas.com/studio/problems/sum-of-first-n-numbers_8876068?utm_source=striver&utm_medium=website&utm_campaign=a_zcoursetuf&leftPanelTabValue=PROBLEM

Sum Of First N Numbers

long long sumFirstN(long long n) {
    // Write your code here.
    // if(n==1){
    //     return {1};
    // }
    // return n+sumFirstN(n-1);

    return n*(n+1)/2;
}

*****************************************************************************************************************************

8) factirial using vector 
https://www.codingninjas.com/studio/problems/factorial_975273?leftPanelTabValue=SUBMISSION

#include<bits/stdc++.h>


void factorial(int n)
{
    // Write your code here
     vector<int> ans;
    int k = n;
    while(k){
        ans.push_back(k%10);
        k/=10;
    }
    for(int i=2; i<n; i++){
        int carry = 0;
        for(int j=0; j<ans.size(); j++){
            int prod = ans[j]*i + carry;
            ans[j] = prod%10;
            carry = prod/10;
        }
        while(carry){
            ans.push_back(carry%10);
            carry/=10;
        }
    }
    reverse(ans.begin(), ans.end());
    for(int i: ans) cout<<i;
}




*****************************************************************************************************************************


9) 
https://www.codingninjas.com/studio/problems/reverse-an-array_8365444?utm_source=striver&utm_medium=website&utm_campaign=a_zcoursetuf&leftPanelTabValue=PROBLEM


Reverse an Array

vector<int> reverseArray(int n, vector<int> &nums)
{
    // Write your code here.
    vector<int>ans;
    for(int i=nums.size()-1;i>=0;i--){
        ans.push_back(nums[i]);
    }
    return ans;

}


*****************************************************************************************************************************

10) 




