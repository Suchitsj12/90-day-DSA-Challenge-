1) https://www.codingninjas.com/studio/problems/largest-element-in-the-array-largest-element-in-the-array_5026279?utm_source=youtube&utm_medium=affiliate&utm_campaign=striver_Arrayproblems
Largest Element in the Array
#include <bits/stdc++.h> 
int largestElement(vector<int> &arr, int n) {
    // Write your code here.
    int max=arr[0];
    for(int i=0;i<n;i++){
        if(arr[i]>max){
            max=arr[i];
        }     
    }
    return max;
}


*****************************************************************************************************************************

2) https://www.codingninjas.com/studio/problems/ninja-and-the-second-order-elements_6581960?utm_source=youtube&utm_medium=affiliate&utm_campaign=striver_Arrayproblems&leftPanelTabValue=SUBMISSION

Second Largest Number

#include <bits/stdc++.h>
int secondlargest(vector<int>&a,int n){
    int largest=a[0];
    int slargest=-1;
    for(int i=0;i<n;i++){
        if(a[i]>largest){
            slargest=largest;
            largest=a[i];
        }
        else if (a[i]<largest&&a[i]>slargest){
            slargest=a[i];
        }
    }
    return slargest;
}

int secondsmallest(vector<int>&a,int n){
    int smallest=a[0];
    int ssmallest=INT_MAX;
    for(int i=0;i<n;i++){
        if(a[i]<smallest){
            ssmallest=smallest;
            smallest=a[i];
        }
        else if(a[i]!=smallest&&a[i]<ssmallest){
            ssmallest=a[i];
        }
    }
    return ssmallest;

}
vector<int> getSecondOrderElements(int n, vector<int> a) {
    // Write your code here.
    int slargest=secondlargest(a,n);
    int ssmallest=secondsmallest(a,n);
    vector<int> result = {slargest, ssmallest};
    return result;
}

*****************************************************************************************************************************

3) https://www.codingninjas.com/studio/problems/ninja-and-the-sorted-check_6581957?utm_source=striver&utm_medium=website&utm_campaign=codestudio_a_zcourse&leftPanelTabValue=SUBMISSION

 Check Sorted Array

int isSorted(int n, vector<int> a) {
    // Write your code here.

    // int a[0];
    for(int i=0;i<n;i++){
        if(a[i]>=a[i-1]){
            // return 1;
        }
        else{
            return 0;
        }
    }
    return 1;
}


*****************************************************************************************************************************

4)
https://www.codingninjas.com/studio/problems/remove-duplicates-from-sorted-array_1102307?utm_source=youtube&utm_medium=affiliate&utm_campaign=striver_Arrayproblems&leftPanelTabValue=SUBMISSION

 Remove Duplicates from Sorted Array

//using sets

#include<bits/stdc++.h>

int removeDuplicates(vector<int> &arr, int n) {
	// Write your code here.
	set<int>st;
	for(int i=0;i<n;i++){
		st.insert(arr[i]);
	}
	int index=0;
	for(auto it:st){
		arr[index]=it;
		index++;
	}
	return index;
}


// with Two Pointer approach 


int removeDuplicates(vector<int> &arr, int n) {
	// Write your code here.
	int i=0;
	for(int j=1;j<n;j++){
		// int j=1;
		if(arr[j]!=arr[i]){
			arr[i+1]=arr[j];
			i++;
		}
	}
	return i+1;
}



*****************************************************************************************************************************

5)  https://www.codingninjas.com/studio/problems/left-rotate-an-array-by-one_5026278?utm_source=striver&utm_medium=website&utm_campaign=codestudio_a_zcourse&leftPanelTabValue=PROBLEM
Left Rotate an Array by One
#include <bits/stdc++.h> 
vector<int> rotateArray(vector<int>& arr, int n) {
    // Write your code here.
    int temp=arr[0];
    for(int i=1;i<n;i++){
        arr[i-1]=arr[i];
    }
    arr[n-1]=temp;

    return arr;


}

*****************************************************************************************************************************


6)
  https://www.codingninjas.com/studio/problems/rotate-array_1230543?utm_source=youtube&utm_medium=affiliate&utm_campaign=striver_Arrayproblems&leftPanelTabValue=SUBMISSION

vector<int> rotateArray(vector<int>arr, int k) {
    // Write your code here
    int n=arr.size();
    k=k%n;
    // vector<int>temp;
    int temp[k];
    for(int i=0;i<k;i++){
        temp[i]=arr[i];
    }
    for(int i=k;i<n;i++){
        arr[i-k]=arr[i];
    }
    for(int i=n-k;i<n;i++){
        arr[i]=temp[i-(n-k)];
    }
    return arr;
}

// use of reversing  optimal approach

#include <bits/stdc++.h>

void reverse(int arr[],int start, int end){
   
    int temp;
    while(start<end){
        temp=arr[start];
        arr[start]=arr[end];
        arr[end]=temp;
        start++;
        end--;
    }
}

vector<int> rotateArray(vector<int>arr, int k) {
    // Write your code here
    int n=arr.size();
    k=k%n;
    reverse(arr.data(),0,k-1);
    reverse(arr.data(),k,n-1);
    reverse(arr.data(),0,n-1);
    return arr;
}



*****************************************************************************************************************************
7)
https://www.codingninjas.com/studio/problems/ninja-and-the-zero-s_6581958?utm_source=striver&utm_medium=website&utm_campaign=a_zcoursetuf&leftPanelTabValue=PROBLEM

Move Zero's to End

brute force 

vector<int> moveZeros(int n, vector<int> a) {
    // Write your code here.
    vector<int> temp;
    for(int i=0;i<a.size();i++){
        if(a[i]!=0){
            temp.push_back(a[i]);
        }
    }
    for(int i=0;i<temp.size();i++){
        a[i]=temp[i];
    }
    for(int i=temp.size();i<a.size();i++){
        a[i]=0;
    }
    return a;
}



